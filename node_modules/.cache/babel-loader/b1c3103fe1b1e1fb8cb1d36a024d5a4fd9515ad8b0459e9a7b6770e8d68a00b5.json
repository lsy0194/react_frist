{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dltmd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uD3EC\\uD1A0\\uD3F4\\uB9AC\\uC624\\\\\\uC5D0\\uC774\\uBE14\\uB7F0\\\\web0925\\\\react_tmp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log('re-render');\n  let Num = useRef(0);\n  console.log(Num);\n  //const [Num, setNum] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        --Num.current * 45;\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        ++Num.current * 45;\n      },\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      style: {\n        transform: `rotate(${45 * Num}deg)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"RbSWVagko5j3L4MYVW/nUWmqTrk=\");\n_c = App;\nexport default App;\n/* \r\n\tstate: 해당 값이 변경되면 무조건 컴포넌트 재랜더링됨, 이전랜더링 사이클의 값이 유지됨\r\n\t변수: 컴포넌트 안에 값을 만듬, 컴포넌트가 재랜더링 될때마다 값이 계속 초기화됨\r\n\tuseRef: useRef를 통해서 참조객체를 만들고 해당 참조객체에 저장되어 있는 값은 컴포넌트가 재랜더링되더라도 값이 유지됨\r\n\t단 useRef의 값이 변경이 되더라도 컴포넌트가 재랜더리되지 않음\r\n\r\n\tuseRef실사용 사례1\r\n\t-모션작업을 할때 특정 스타일 변경되더라도 컴포넌트를 불필요하게 재호출하고 싶지 않을때\r\n\tuseRef실사용 사례2\r\n\t-가상돔요소를 실제로 선택해서 가져와야 될때\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","console","log","Num","children","onClick","current","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","_c","$RefreshReg$"],"sources":["C:/Users/dltmd/OneDrive/바탕 화면/포토폴리오/에이블런/web0925/react_tmp/src/App.jsx"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport './style.scss';\r\n\r\nfunction App() {\r\n\tconsole.log('re-render');\r\n\tlet Num = useRef(0);\r\n\tconsole.log(Num);\r\n\t//const [Num, setNum] = useState(0);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t--Num.current * 45;\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tPrev\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t++Num.current * 45;\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tnext\r\n\t\t\t</button>\r\n\r\n\t\t\t<article style={{ transform: `rotate(${45 * Num}deg)` }}></article>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n/* \r\n\tstate: 해당 값이 변경되면 무조건 컴포넌트 재랜더링됨, 이전랜더링 사이클의 값이 유지됨\r\n\t변수: 컴포넌트 안에 값을 만듬, 컴포넌트가 재랜더링 될때마다 값이 계속 초기화됨\r\n\tuseRef: useRef를 통해서 참조객체를 만들고 해당 참조객체에 저장되어 있는 값은 컴포넌트가 재랜더링되더라도 값이 유지됨\r\n\t단 useRef의 값이 변경이 되더라도 컴포넌트가 재랜더리되지 않음\r\n\r\n\tuseRef실사용 사례1\r\n\t-모션작업을 할때 특정 스타일 변경되더라도 컴포넌트를 불필요하게 재호출하고 싶지 않을때\r\n\tuseRef실사용 사례2\r\n\t-가상돔요소를 실제로 선택해서 가져와야 될때\r\n\r\n*/\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACdC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxB,IAAIC,GAAG,GAAGV,MAAM,CAAC,CAAC,CAAC;EACnBQ,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EAChB;EACA,oBACCP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACCR,OAAA;MACCS,OAAO,EAAEA,CAAA,KAAM;QACd,EAAEF,GAAG,CAACG,OAAO,GAAG,EAAE;MACnB,CAAE;MAAAF,QAAA,EACF;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTd,OAAA;MACCS,OAAO,EAAEA,CAAA,KAAM;QACd,EAAEF,GAAG,CAACG,OAAO,GAAG,EAAE;MACnB,CAAE;MAAAF,QAAA,EACF;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETd,OAAA;MAASe,KAAK,EAAE;QAAEC,SAAS,EAAG,UAAS,EAAE,GAAGT,GAAI;MAAM;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA,eAClE,CAAC;AAEL;AAACV,EAAA,CAzBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA2BZ,eAAeA,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}