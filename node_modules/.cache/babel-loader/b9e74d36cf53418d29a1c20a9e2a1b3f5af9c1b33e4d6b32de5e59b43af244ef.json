{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dltmd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uD3EC\\uD1A0\\uD3F4\\uB9AC\\uC624\\\\\\uC5D0\\uC774\\uBE14\\uB7F0\\\\web0925\\\\react_tmp\\\\src\\\\components\\\\Popup.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n//uesEffect:컴포넌트 생성,변화,소멸의 특정 상태마다 원하는 이벤트를 연결가능\n//useEffect(실행할함수,의존성배열)\n//의존성배열이 비어있는 상태에서 함수안쪽에 구문을 입력하면 (컴포넌트 마운트시 한번만 실행)\n//실사용 사례 - 팝업생성시 스크롤바 제거\n//실사용 사례 - 특정 컴포넌트가 마운트 되었을때만 스크롤 이벤트 연결\n\n//의존성배열이 비어있는 상태에서 리턴되는 함수 안쪽에 구문을 입력하면 (컴포넌트 언마운트시 한번만 실행)\n//실사용 사례 - 팝업생성시 스크롤바 생성\n//실사용 사례 - 특정 컴포넌트가 언마운트 되었을때 스크롤 이벤트 제거\n\n//의존성배열에 특정 state를 담아두고 함수 안쪽에 구문을 입력하면 (해당 state값이 변경돨때마다 실행)\n//특정 이벤트가 발생해서 새로운 데이터를 fetching할 때마다 로딩바 출력\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Popup() {\n  _s();\n  console.log('팝업재호출');\n  const [Num, setNum] = useState(0);\n  useEffect(() => {\n    //컴포넌트 mount시 한번만 실행\n    console.log('팝업생성');\n    console.log('무거운 유튜브 데이터 fetching');\n    return () => {\n      //컴포넌트가 unmount시 한번만 실행\n      console.log('팝업소멸');\n    };\n  }, []);\n  useEffect(() => {\n    console.log('popup의 Num 상태변화');\n  }, [Num]);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Num\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNum(Num - 1),\n      children: \"minus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNum(Num + 1),\n      children: \"plus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n_s(Popup, \"osRns0d7SsxDyDMHFaTJm3m3ih0=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Popup","_s","console","log","Num","setNum","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dltmd/OneDrive/바탕 화면/포토폴리오/에이블런/web0925/react_tmp/src/components/Popup.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n//uesEffect:컴포넌트 생성,변화,소멸의 특정 상태마다 원하는 이벤트를 연결가능\r\n//useEffect(실행할함수,의존성배열)\r\n//의존성배열이 비어있는 상태에서 함수안쪽에 구문을 입력하면 (컴포넌트 마운트시 한번만 실행)\r\n//실사용 사례 - 팝업생성시 스크롤바 제거\r\n//실사용 사례 - 특정 컴포넌트가 마운트 되었을때만 스크롤 이벤트 연결\r\n\r\n//의존성배열이 비어있는 상태에서 리턴되는 함수 안쪽에 구문을 입력하면 (컴포넌트 언마운트시 한번만 실행)\r\n//실사용 사례 - 팝업생성시 스크롤바 생성\r\n//실사용 사례 - 특정 컴포넌트가 언마운트 되었을때 스크롤 이벤트 제거\r\n\r\n//의존성배열에 특정 state를 담아두고 함수 안쪽에 구문을 입력하면 (해당 state값이 변경돨때마다 실행)\r\n//특정 이벤트가 발생해서 새로운 데이터를 fetching할 때마다 로딩바 출력\r\n\r\nfunction Popup() {\r\n\tconsole.log('팝업재호출');\r\n\tconst [Num, setNum] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\t//컴포넌트 mount시 한번만 실행\r\n\t\tconsole.log('팝업생성');\r\n\t\tconsole.log('무거운 유튜브 데이터 fetching');\r\n\r\n\t\treturn () => {\r\n\t\t\t//컴포넌트가 unmount시 한번만 실행\r\n\t\t\tconsole.log('팝업소멸');\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('popup의 Num 상태변화');\r\n\t}, [Num]);\r\n\r\n\treturn (\r\n\t\t<aside>\r\n\t\t\t<h1>{Num}</h1>\r\n\t\t\t<button onClick={() => setNum(Num - 1)}>minus</button>\r\n\t\t\t<button onClick={() => setNum(Num + 1)}>plus</button>\r\n\t\t</aside>\r\n\t);\r\n}\r\n\r\nexport default Popup;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAChBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACf;IACAM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,OAAO,MAAM;MACZ;MACAD,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACpB,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACfM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC/B,CAAC,EAAE,CAACC,GAAG,CAAC,CAAC;EAET,oBACCL,OAAA;IAAAO,QAAA,gBACCP,OAAA;MAAAO,QAAA,EAAKF;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACdX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMN,MAAM,CAACD,GAAG,GAAG,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtDX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMN,MAAM,CAACD,GAAG,GAAG,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACT,EAAA,CA1BQD,KAAK;AAAAY,EAAA,GAALZ,KAAK;AA4Bd,eAAeA,KAAK;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}