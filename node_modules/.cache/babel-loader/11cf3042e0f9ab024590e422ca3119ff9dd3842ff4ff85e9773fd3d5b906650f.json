{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dltmd\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uD3EC\\uD1A0\\uD3F4\\uB9AC\\uC624\\\\\\uC5D0\\uC774\\uBE14\\uB7F0\\\\web0925\\\\react_tmp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log('re-render');\n  //회전값에 적용할 증가하거나 감소할 숫자값을 Num이라는 빈 참조객체에 저장\n  //해당 값이 바뀌더라도 컴포넌트를 재랜더링 하지 않기 위함\n  let Num = useRef(0);\n  //가상돔인 article요소를 담기위한 빈 참조객체 생성\n  //아직 실제적으로 만들어지 않은 돔을 임의로 담아서 이벤트호출할때 불러오기 위함\n  let Box = useRef(null);\n  console.log(Num);\n  const prev = () => {\n    //Box.current에는 아직 생성되지 않은 가상돔 상태인 article을 가져와서 Num값이 변경될떄마다 style 적용\n    //이때 Num값 자체가 state가 아닌 useRef로 담아놓은 값이때문에 해당 값이 변경되더라도 컴포넌트가 재랜더링 되지 않음\n    Box.current.style.transform = `rotate(${--Num.current * 45}deg)`;\n  };\n  const next = () => {\n    Box.current.style.transform = `rotate(${++Num.current * 45}deg)`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prev,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: next,\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      ref: Box\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"BGGXs0GqJq1ujWkbeZ6ClTZW/hw=\");\n_c = App;\nexport default App;\n/* \r\n\tstate: 해당 값이 변경되면 무조건 컴포넌트 재랜더링됨, 이전랜더링 사이클의 값이 유지됨\r\n\t변수: 컴포넌트 안에 값을 만듬, 컴포넌트가 재랜더링 될때마다 값이 계속 초기화됨\r\n\tuseRef: useRef를 통해서 참조객체를 만들고 해당 참조객체에 저장되어 있는 값은 컴포넌트가 재랜더링되더라도 값이 유지됨\r\n\t단 useRef의 값이 변경이 되더라도 컴포넌트가 재랜더리되지 않음\r\n\r\n\tuseRef실사용 사례1\r\n\t-모션작업을 할때 특정 스타일 변경되더라도 컴포넌트를 불필요하게 재호출하고 싶지 않을때\r\n\tuseRef실사용 사례2\r\n\t-가상돔요소를 실제로 선택해서 가져와야 될때\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","console","log","Num","Box","prev","current","style","transform","next","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/dltmd/OneDrive/바탕 화면/포토폴리오/에이블런/web0925/react_tmp/src/App.jsx"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport './style.scss';\r\n\r\nfunction App() {\r\n\tconsole.log('re-render');\r\n\t//회전값에 적용할 증가하거나 감소할 숫자값을 Num이라는 빈 참조객체에 저장\r\n\t//해당 값이 바뀌더라도 컴포넌트를 재랜더링 하지 않기 위함\r\n\tlet Num = useRef(0);\r\n\t//가상돔인 article요소를 담기위한 빈 참조객체 생성\r\n\t//아직 실제적으로 만들어지 않은 돔을 임의로 담아서 이벤트호출할때 불러오기 위함\r\n\tlet Box = useRef(null);\r\n\tconsole.log(Num);\r\n\tconst prev = () => {\r\n\t\t//Box.current에는 아직 생성되지 않은 가상돔 상태인 article을 가져와서 Num값이 변경될떄마다 style 적용\r\n\t\t//이때 Num값 자체가 state가 아닌 useRef로 담아놓은 값이때문에 해당 값이 변경되더라도 컴포넌트가 재랜더링 되지 않음\r\n\t\tBox.current.style.transform = `rotate(${--Num.current * 45}deg)`;\r\n\t};\r\n\r\n\tconst next = () => {\r\n\t\tBox.current.style.transform = `rotate(${++Num.current * 45}deg)`;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button onClick={prev}>Prev</button>\r\n\t\t\t<button onClick={next}>next</button>\r\n\r\n\t\t\t<article ref={Box}></article>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n/* \r\n\tstate: 해당 값이 변경되면 무조건 컴포넌트 재랜더링됨, 이전랜더링 사이클의 값이 유지됨\r\n\t변수: 컴포넌트 안에 값을 만듬, 컴포넌트가 재랜더링 될때마다 값이 계속 초기화됨\r\n\tuseRef: useRef를 통해서 참조객체를 만들고 해당 참조객체에 저장되어 있는 값은 컴포넌트가 재랜더링되더라도 값이 유지됨\r\n\t단 useRef의 값이 변경이 되더라도 컴포넌트가 재랜더리되지 않음\r\n\r\n\tuseRef실사용 사례1\r\n\t-모션작업을 할때 특정 스타일 변경되더라도 컴포넌트를 불필요하게 재호출하고 싶지 않을때\r\n\tuseRef실사용 사례2\r\n\t-가상돔요소를 실제로 선택해서 가져와야 될때\r\n\r\n*/\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACdC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxB;EACA;EACA,IAAIC,GAAG,GAAGV,MAAM,CAAC,CAAC,CAAC;EACnB;EACA;EACA,IAAIW,GAAG,GAAGX,MAAM,CAAC,IAAI,CAAC;EACtBQ,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EAChB,MAAME,IAAI,GAAGA,CAAA,KAAM;IAClB;IACA;IACAD,GAAG,CAACE,OAAO,CAACC,KAAK,CAACC,SAAS,GAAI,UAAS,EAAEL,GAAG,CAACG,OAAO,GAAG,EAAG,MAAK;EACjE,CAAC;EAED,MAAMG,IAAI,GAAGA,CAAA,KAAM;IAClBL,GAAG,CAACE,OAAO,CAACC,KAAK,CAACC,SAAS,GAAI,UAAS,EAAEL,GAAG,CAACG,OAAO,GAAG,EAAG,MAAK;EACjE,CAAC;EAED,oBACCV,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACCd,OAAA;MAAQe,OAAO,EAAEN,IAAK;MAAAK,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpCnB,OAAA;MAAQe,OAAO,EAAEF,IAAK;MAAAC,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpCnB,OAAA;MAASoB,GAAG,EAAEZ;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA,eAC5B,CAAC;AAEL;AAACf,EAAA,CA3BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA6BZ,eAAeA,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}